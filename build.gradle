apply plugin: 'java'
apply plugin: 'idea'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile group: 'com.h2database', name: 'h2', version: '1.4.191'

    compile(group: 'org.skunk', name: 'too-skunk', version: '1.1') {
        exclude group: 'ch.qos.logback'
        exclude group: 'org.apache.activemq'
        exclude group: 'org.slf4j'
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.3.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '1.3.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.3.3.RELEASE'

    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        events "passed", "skipped", "failed", "standardOut", "standardError"
        //showStandardStreams = true

        // Or we use events method:
        // events 'standard_out', 'standard_error'

        // Or set property events:
        // events = ['standard_out', 'standard_error']

        // Instead of string values we can
        // use enum values:
        // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
        //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
    }
}

//
// We use the Gradle Wrapper
//
task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
